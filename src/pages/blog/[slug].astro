---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { prisma } from '../../lib/database';

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect('/blog');
}

// Fetch blog post from database
const blogPost = await prisma.post.findUnique({
  where: { slug },
  include: {
    author: { select: { name: true, email: true } },
    category: true,
    tags: { include: { tag: true } },
    comments: {
      where: { approved: true },
      include: { author: { select: { name: true } } },
      orderBy: { createdAt: 'desc' }
    }
  }
});

if (!blogPost || !blogPost.published) {
  return Astro.redirect('/blog');
}

// Increment views
await prisma.post.update({
  where: { id: blogPost.id },
  data: { views: { increment: 1 } }
});

// Get related posts
const relatedPosts = await prisma.post.findMany({
  where: {
    published: true,
    categoryId: blogPost.categoryId,
    id: { not: blogPost.id }
  },
  include: {
    category: true
  },
  take: 3
});
---

<BaseLayout 
  title={blogPost.seoTitle || `${blogPost.title} - Jacques Belmont`}
  description={blogPost.seoDescription || blogPost.excerpt || ''}
  image={blogPost.image}
  keywords={blogPost.seoKeywords ? blogPost.seoKeywords.split(',').map(k => k.trim()) : []}
  type="article"
  publishedTime={blogPost.publishedAt?.toISOString()}
  modifiedTime={blogPost.updatedAt.toISOString()}
  author={blogPost.author.name}
  section={blogPost.category.name}
  tags={blogPost.tags.map(({ tag }) => tag.name)}
>
  <!-- Article Header -->
  <article class="pt-20">
    <header class="py-16 bg-gradient-to-br from-primary-50 via-white to-secondary-50">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <div class="flex items-center justify-center space-x-4 mb-6">
            <span class="px-3 py-1 bg-primary-100 text-primary-700 text-sm font-medium rounded-full">
              {blogPost.category.name}
            </span>
            <span class="text-gray-500 text-sm">{blogPost.readTime || '5 min read'}</span>
          </div>
          
          <h1 class="text-4xl lg:text-5xl font-display font-bold text-gray-900 mb-6">
            {blogPost.title}
          </h1>
          
          <p class="text-xl text-gray-600 mb-8 max-w-3xl mx-auto">
            {blogPost.excerpt || ''}
          </p>
          
          <div class="flex items-center justify-center space-x-6 text-sm text-gray-500">
            <div class="flex items-center">
              <img 
                src="https://images.pexels.com/photos/3184306/pexels-photo-3184306.jpeg?auto=compress&cs=tinysrgb&w=100" 
                alt={blogPost.author.name}
                class="w-10 h-10 rounded-full mr-3"
              />
              <span>By {blogPost.author.name}</span>
            </div>
            <span>â€¢</span>
            <span>{new Date(blogPost.publishedAt || blogPost.createdAt).toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}</span>
          </div>
        </div>
      </div>
    </header>

    <!-- Featured Image -->
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 -mt-8">
      {blogPost.image && (
      <div class="aspect-video rounded-2xl overflow-hidden shadow-2xl">
        <img 
          src={blogPost.image}
          alt={blogPost.title}
          class="w-full h-full object-cover"
        />
      </div>
      )}
    </div>

    <!-- Article Content -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <div class="prose prose-lg max-w-none">
        <div set:html={blogPost.content} />
      </div>
      
      <!-- Tags -->
      <div class="mt-12 pt-8 border-t border-gray-200">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Tags</h3>
        <div class="flex flex-wrap gap-2">
          {blogPost.tags.map(({ tag }) => (
            <span class="px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full hover:bg-primary-100 hover:text-primary-700 transition-colors cursor-pointer">
              #{tag.name}
            </span>
          ))}
        </div>
      </div>
      
      <!-- Share Buttons -->
      <div class="mt-8 pt-8 border-t border-gray-200">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Share this article</h3>
        <div class="flex space-x-4">
          <a 
            href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(blogPost.title)}&url=${encodeURIComponent(Astro.url.href)}`}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
          >
            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
              <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
            </svg>
            Twitter
          </a>
          
          <a 
            href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.href)}`}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center px-4 py-2 bg-blue-700 text-white rounded-lg hover:bg-blue-800 transition-colors"
          >
            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
              <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
            </svg>
            LinkedIn
          </a>
          
          <button 
            onclick="navigator.share ? navigator.share({title: document.title, url: window.location.href}) : navigator.clipboard.writeText(window.location.href)"
            class="flex items-center px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors"
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
            </svg>
            Share
          </button>
        </div>
      </div>
    </div>

    <!-- Related Articles -->
    {relatedPosts.length > 0 && (
    <section class="py-16 bg-gray-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 class="text-3xl font-display font-bold text-gray-900 mb-8 text-center">Related Articles</h2>
        <div class="grid md:grid-cols-3 gap-8">
          {relatedPosts.map((post) => (
            <a href={`/blog/${post.slug}`} class="bg-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden">
              <img 
                src={post.image || 'https://images.pexels.com/photos/270637/pexels-photo-270637.jpeg?auto=compress&cs=tinysrgb&w=400'}
                alt={post.title}
                class="w-full h-48 object-cover"
              />
              <div class="p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-2">{post.title}</h3>
                <p class="text-gray-600 text-sm">{post.excerpt || post.title}</p>
              </div>
            </a>
          ))}
        </div>
      </div>
    </section>
    )}
  </article>
</BaseLayout>

<style>
  .prose {
    @apply text-gray-700 leading-relaxed;
  }
  
  .prose h2 {
    @apply text-2xl font-display font-bold text-gray-900 mt-12 mb-6;
  }
  
  .prose h3 {
    @apply text-xl font-display font-semibold text-gray-900 mt-8 mb-4;
  }
  
  .prose p {
    @apply mb-6;
  }
  
  .prose blockquote {
    @apply text-lg text-gray-700 font-medium my-8;
  }
  
  .prose iframe {
    @apply rounded-lg;
  }
  
  /* SEO optimized content styles */
  .prose img {
    @apply rounded-lg shadow-md;
  }
  
  .prose a {
    @apply text-primary-600 hover:text-primary-700 underline;
  }
</style>

<!-- SEO Schema Markup -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": blogPost.title,
  "description": blogPost.excerpt || blogPost.title,
  "image": blogPost.image,
  "author": {
    "@type": "Person",
    "name": blogPost.author.name
  },
  "publisher": {
    "@type": "Organization",
    "name": "Jacques Belmont",
    "logo": {
      "@type": "ImageObject",
      "url": "https://jacquesbelmont.com/logo.png"
    }
  },
  "datePublished": blogPost.publishedAt || blogPost.createdAt,
  "dateModified": blogPost.updatedAt,
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": `https://jacquesbelmont.com/blog/${blogPost.slug}`
  }
})} />