---
import AdminNavigation from '../components/admin/AdminNavigation.astro';

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title} - Admin</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    <style>
      body {
        font-family: 'Inter', system-ui, sans-serif;
      }
    </style>
  </head>
  <body class="bg-gray-100 min-h-screen">
    <!-- Authentication Check -->
    <div id="auth-check" class="hidden">
      <div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
        <div class="max-w-md w-full space-y-8">
          <div>
            <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
              Acesso Administrativo
            </h2>
            <p class="mt-2 text-center text-sm text-gray-600">
              Faça login para acessar o painel administrativo
            </p>
          </div>
          <form class="mt-8 space-y-6" id="login-form">
            <div class="rounded-md shadow-sm -space-y-px">
              <div>
                <input
                  id="username"
                  name="username"
                  type="text"
                  required
                  class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
                  placeholder="Usuário"
                />
              </div>
              <div>
                <input
                  id="password"
                  name="password"
                  type="password"
                  required
                  class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
                  placeholder="Senha"
                />
              </div>
            </div>

            <div>
              <button
                type="submit"
                class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              >
                Entrar
              </button>
            </div>
            
            <div id="error-message" class="hidden text-red-600 text-sm text-center"></div>
          </form>
        </div>
      </div>
    </div>

    <!-- Admin Content -->
    <div id="admin-content" class="hidden">
      <AdminNavigation />
      <main class="ml-64 p-8">
        <slot />
      </main>
    </div>

    <script>
      // Import admin config functions
      const ADMIN_CONFIG = {
        credentials: {
          username: 'admin',
          password: 'admin123',
        },
        session: {
          cookieName: 'admin_session',
          duration: 24 * 60 * 60 * 1000,
        },
      };

      function isAuthenticated() {
        const session = localStorage.getItem(ADMIN_CONFIG.session.cookieName);
        if (!session) return false;
        
        try {
          const sessionData = JSON.parse(session);
          const now = Date.now();
          return sessionData.expires > now;
        } catch {
          return false;
        }
      }

      function authenticate(username, password) {
        if (username === ADMIN_CONFIG.credentials.username && 
            password === ADMIN_CONFIG.credentials.password) {
          const sessionData = {
            authenticated: true,
            expires: Date.now() + ADMIN_CONFIG.session.duration,
          };
          localStorage.setItem(ADMIN_CONFIG.session.cookieName, JSON.stringify(sessionData));
          return true;
        }
        return false;
      }

      // Check authentication on page load
      document.addEventListener('DOMContentLoaded', () => {
        const authCheck = document.getElementById('auth-check');
        const adminContent = document.getElementById('admin-content');
        const loginForm = document.getElementById('login-form');
        const errorMessage = document.getElementById('error-message');

        if (isAuthenticated()) {
          authCheck.classList.add('hidden');
          adminContent.classList.remove('hidden');
        } else {
          authCheck.classList.remove('hidden');
          adminContent.classList.add('hidden');
        }

        // Handle login form
        loginForm.addEventListener('submit', (e) => {
          e.preventDefault();
          const username = document.getElementById('username').value;
          const password = document.getElementById('password').value;

          if (authenticate(username, password)) {
            authCheck.classList.add('hidden');
            adminContent.classList.remove('hidden');
          } else {
            errorMessage.textContent = 'Credenciais inválidas';
            errorMessage.classList.remove('hidden');
          }
        });
      });
    </script>
  </body>
</html>